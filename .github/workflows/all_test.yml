# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Test all client

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  java-client:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: start nebula-graph
      run: |
        mkdir tmp
        pushd tmp
        git clone -b v2-preview https://github.com/vesoft-inc/nebula-docker-compose.git
        pushd nebula-docker-compose/
        sed -i '0,/\- 3699/s/\- 3699/\- "3700:3699"/' docker-compose.yaml
        sed -i '0,/\- 3699/s/\- 3699/\- "3701:3699"/' docker-compose.yaml
        docker-compose up -d
        sleep 10
        popd
        popd

    - name: Build with Maven
      run: mvn -B package --file java/pom.xml

  python-client:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django-import-export future futures six gevent prettytable pytest
    - name: Test with pytest
      run: |
        mkdir tmp
        pushd tmp
        git clone -b v2-preview https://github.com/vesoft-inc/nebula-docker-compose.git
        pushd nebula-docker-compose/
        sed -i '0,/\- 3699/s/\- 3699/\- "3700:3699"/' docker-compose.yaml
        sed -i '0,/\- 3699/s/\- 3699/\- "3701:3699"/' docker-compose.yaml
        docker-compose up -d
        sleep 10
        popd
        popd
        cd python/tests
        pytest -s
  
  go-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Test with GO test
        run: |
          mkdir tmp
          pushd tmp
          git clone -b v2-preview https://github.com/vesoft-inc/nebula-docker-compose.git
          pushd nebula-docker-compose/
          sed -i '0,/\- 3699/s/\- 3699/\- "3710:3699"/' docker-compose.yaml
          sed -i '0,/\- 3699/s/\- 3699/\- "3701:3699"/' docker-compose.yaml
          docker-compose up -d
          sleep 10
          popd
          popd
          cd go
          go test -v -race

